# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - run: npm run build -- --output-path _site
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build
        path: _site
        
  report_build_status:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: build
    permissions:
      statuses: write 
    steps:
    - name: Create status
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event_name == 'push' && github.sha || github.event.pull_request.head.sha }} \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "state": "${{ needs.build.result }}",
          "context": "Angular Build",
          "target_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }' \
        --fail
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v3
    - name: Download Build Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        name: build
        path: _site
    - uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BUCKETROBOTICS }}"
        expires: 30d
        projectId: bucketrobotics-70f4c
        channelId: live
  lighthouse:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - run: npm ci
    - run: npm run build -- --output-path _site
#     - name: Download Build Artifact
#       uses: actions/download-artifact@v3.0.2
#       with:
#         name: build
#         path: _site
    - name: run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.8.x
        lhci autorun --isSinglePageApplication

